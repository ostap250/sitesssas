# Generated by Django 3.1.8 on 2023-12-07 13:50

from django.conf import settings
from django.db import migrations, models
import django.db.models.deletion
import django.utils.timezone


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        migrations.swappable_dependency(settings.AUTH_USER_MODEL),
        ('contenttypes', '0002_remove_content_type_name'),
    ]

    operations = [
        migrations.CreateModel(
            name='Brand',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=15, verbose_name='Назва бренду')),
            ],
        ),
        migrations.CreateModel(
            name='Cart',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('total_products', models.PositiveIntegerField(default=0)),
                ('final_price', models.DecimalField(decimal_places=2, default=0, max_digits=9, verbose_name='Загальна ціна')),
                ('in_order', models.BooleanField(default=False)),
                ('for_anonymous_user', models.BooleanField(default=False)),
            ],
        ),
        migrations.CreateModel(
            name='Category',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=250, verbose_name='Назва категорії')),
                ('slug', models.CharField(max_length=250, verbose_name='Посилання')),
            ],
        ),
        migrations.CreateModel(
            name='Customer',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('phone', models.CharField(blank=True, max_length=20, null=True, verbose_name='Номер телефону')),
                ('address', models.CharField(blank=True, max_length=255, null=True, verbose_name='Адреса')),
            ],
        ),
        migrations.CreateModel(
            name='TVset',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('model', models.CharField(max_length=250, verbose_name='Модель')),
                ('slug', models.SlugField(null=True, unique=True)),
                ('img', models.ImageField(upload_to='', verbose_name='Зображення')),
                ('description', models.TextField(blank=True, null=True, verbose_name='Опис')),
                ('price', models.DecimalField(decimal_places=2, max_digits=9, null=True, verbose_name='Ціна')),
                ('display', models.CharField(max_length=5, verbose_name='Діагональ')),
                ('ds_type', models.CharField(max_length=25, verbose_name='Формат екрану')),
                ('ds_resolution', models.CharField(choices=[('hd', '1280x720'), ('fullhd', '1920x1080'), ('ultrahd', '3840x2160'), ('5k', '5120x2880'), ('8k', '7680x4320')], max_length=25, verbose_name='Роздільна здатність екрану')),
                ('category', models.ForeignKey(null=True, on_delete=django.db.models.deletion.CASCADE, to='products.category', verbose_name='Категорія')),
                ('fk_brand', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='products.brand', verbose_name='Бренд')),
            ],
            options={
                'abstract': False,
            },
        ),
        migrations.CreateModel(
            name='Tablet',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('model', models.CharField(max_length=250, verbose_name='Модель')),
                ('slug', models.SlugField(null=True, unique=True)),
                ('img', models.ImageField(upload_to='', verbose_name='Зображення')),
                ('description', models.TextField(blank=True, null=True, verbose_name='Опис')),
                ('price', models.DecimalField(decimal_places=2, max_digits=9, null=True, verbose_name='Ціна')),
                ('display', models.CharField(max_length=5, verbose_name='Діагональ')),
                ('rom_capacity', models.PositiveSmallIntegerField(verbose_name="Об'єм пам'яті, Гб")),
                ('ram_capacity', models.PositiveSmallIntegerField(verbose_name="Об'єм оперативної пам'яті, Гб")),
                ('is_front_cam', models.BooleanField(verbose_name='Наявність фронтальної камери')),
                ('front_cam', models.PositiveSmallIntegerField(blank=True, null=True, verbose_name='МП')),
                ('is_back_cam', models.BooleanField(verbose_name='Наявність задня камери')),
                ('back_cam', models.PositiveSmallIntegerField(blank=True, null=True, verbose_name='МП')),
                ('is_sd', models.BooleanField(verbose_name='Підтримка SD карт')),
                ('sd', models.PositiveSmallIntegerField(blank=True, null=True, verbose_name='Максимальний обсяг SD карти')),
                ('battery_lifetime', models.PositiveSmallIntegerField(verbose_name='Час автономної роботи, години')),
                ('battery_capacity', models.PositiveSmallIntegerField(verbose_name='Ємність батареї, mAh')),
                ('category', models.ForeignKey(null=True, on_delete=django.db.models.deletion.CASCADE, to='products.category', verbose_name='Категорія')),
                ('fk_brand', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='products.brand', verbose_name='Бренд')),
            ],
            options={
                'abstract': False,
            },
        ),
        migrations.CreateModel(
            name='Smartphone',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('model', models.CharField(max_length=250, verbose_name='Модель')),
                ('slug', models.SlugField(null=True, unique=True)),
                ('img', models.ImageField(upload_to='', verbose_name='Зображення')),
                ('description', models.TextField(blank=True, null=True, verbose_name='Опис')),
                ('price', models.DecimalField(decimal_places=2, max_digits=9, null=True, verbose_name='Ціна')),
                ('display', models.CharField(max_length=5, verbose_name='Діагональ')),
                ('rom_capacity', models.PositiveSmallIntegerField(verbose_name="Об'єм пам'яті, Гб")),
                ('ram_capacity', models.PositiveSmallIntegerField(verbose_name="Об'єм оперативної пам'яті, Гб")),
                ('is_front_cam', models.BooleanField(verbose_name='Наявність фронтальної камери')),
                ('front_cam', models.PositiveSmallIntegerField(blank=True, null=True, verbose_name='МП')),
                ('is_back_cam', models.BooleanField(verbose_name='Наявність задня камери')),
                ('back_cam', models.PositiveSmallIntegerField(blank=True, null=True, verbose_name='МП')),
                ('is_sd', models.BooleanField(default=False, verbose_name='Підтримка SD карт')),
                ('sd', models.PositiveSmallIntegerField(blank=True, null=True, verbose_name='Максимальний обсяг SD карти')),
                ('battery_lifetime', models.PositiveSmallIntegerField(verbose_name='Час автономної роботи, години')),
                ('battery_capacity', models.PositiveSmallIntegerField(verbose_name='Ємність батареї, mAh')),
                ('category', models.ForeignKey(null=True, on_delete=django.db.models.deletion.CASCADE, to='products.category', verbose_name='Категорія')),
                ('fk_brand', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='products.brand', verbose_name='Бренд')),
            ],
            options={
                'abstract': False,
            },
        ),
        migrations.CreateModel(
            name='PersonalComputer',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('model', models.CharField(max_length=250, verbose_name='Модель')),
                ('slug', models.SlugField(null=True, unique=True)),
                ('img', models.ImageField(upload_to='', verbose_name='Зображення')),
                ('description', models.TextField(blank=True, null=True, verbose_name='Опис')),
                ('price', models.DecimalField(decimal_places=2, max_digits=9, null=True, verbose_name='Ціна')),
                ('rom', models.CharField(choices=[('HDD', 'HDD'), ('SSD', 'SSD'), ('HSD', 'HDD + SSD')], max_length=10, verbose_name="Тип пам'яті")),
                ('rom_capacity', models.PositiveSmallIntegerField(verbose_name="Об'єм пам'яті, Гб")),
                ('ram', models.CharField(choices=[('DDR2', 'DDR2'), ('DDR3', 'DDR3'), ('DDR4', 'DDR4')], max_length=10, verbose_name="Тип оперативної пам'яті")),
                ('ram_capacity', models.PositiveSmallIntegerField(verbose_name="Об'єм оперативної пам'яті, Гб")),
                ('category', models.ForeignKey(null=True, on_delete=django.db.models.deletion.CASCADE, to='products.category', verbose_name='Категорія')),
                ('fk_brand', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='products.brand', verbose_name='Бренд')),
            ],
            options={
                'abstract': False,
            },
        ),
        migrations.CreateModel(
            name='Order',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('first_name', models.CharField(max_length=255, verbose_name="Ім'я")),
                ('last_name', models.CharField(max_length=255, verbose_name='Прізвище')),
                ('phone', models.CharField(max_length=20, verbose_name='Телефон')),
                ('address', models.CharField(blank=True, max_length=1024, null=True, verbose_name='Адреса')),
                ('status', models.CharField(choices=[('new', 'Нове замовлення'), ('in_progress', 'Замовлення обробляється'), ('is_ready', 'Замовлення готове'), ('completed', 'Замовлення виконане')], default='new', max_length=100, verbose_name='Статус замовлення')),
                ('buying_type', models.CharField(choices=[('self', 'Самовивіз'), ('delivery', 'Доставка')], default='self', max_length=100, verbose_name='Тип замовлення')),
                ('comment', models.TextField(blank=True, null=True, verbose_name='Коментарій до замовлення')),
                ('created_at', models.DateTimeField(auto_now=True, verbose_name='Дата создания заказа')),
                ('order_date', models.DateField(default=django.utils.timezone.now, verbose_name='Дата отримання замовлення')),
                ('cart', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, to='products.cart', verbose_name='Корзина')),
                ('customer', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='related_orders', to='products.customer', verbose_name='Покупець')),
            ],
        ),
        migrations.CreateModel(
            name='Notebook',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('model', models.CharField(max_length=250, verbose_name='Модель')),
                ('slug', models.SlugField(null=True, unique=True)),
                ('img', models.ImageField(upload_to='', verbose_name='Зображення')),
                ('description', models.TextField(blank=True, null=True, verbose_name='Опис')),
                ('price', models.DecimalField(decimal_places=2, max_digits=9, null=True, verbose_name='Ціна')),
                ('display', models.CharField(max_length=5, verbose_name='Діагональ')),
                ('rom', models.CharField(choices=[('HDD', 'HDD'), ('SSD', 'SSD'), ('HSD', 'HDD + SSD')], max_length=10, verbose_name="Тип пам'яті")),
                ('rom_capacity', models.PositiveSmallIntegerField(verbose_name="Об'єм пам'яті, Гб")),
                ('ram', models.CharField(choices=[('DDR2', 'DDR2'), ('DDR3', 'DDR3'), ('DDR4', 'DDR4')], max_length=10, verbose_name="Тип оперативної пам'яті")),
                ('ram_capacity', models.PositiveSmallIntegerField(verbose_name="Об'єм оперативної пам'яті, Гб")),
                ('battery_lifetime', models.PositiveSmallIntegerField(null=True, verbose_name='Час автономної роботи, години')),
                ('battery_capacity', models.PositiveSmallIntegerField(null=True, verbose_name='Ємність батареї, mAh')),
                ('category', models.ForeignKey(null=True, on_delete=django.db.models.deletion.CASCADE, to='products.category', verbose_name='Категорія')),
                ('fk_brand', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='products.brand', verbose_name='Бренд')),
            ],
            options={
                'abstract': False,
            },
        ),
        migrations.AddField(
            model_name='customer',
            name='orders',
            field=models.ManyToManyField(blank=True, related_name='related_order', to='products.Order', verbose_name='Замовлення покупця'),
        ),
        migrations.AddField(
            model_name='customer',
            name='user',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL, verbose_name='Користувач'),
        ),
        migrations.CreateModel(
            name='CartProduct',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('object_id', models.PositiveIntegerField()),
                ('qty', models.PositiveIntegerField(default=1)),
                ('final_price', models.DecimalField(decimal_places=2, max_digits=9, verbose_name='Загальна ціна')),
                ('cart', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='related_products', to='products.cart', verbose_name='Корзина')),
                ('content_type', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='contenttypes.contenttype')),
                ('user', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='products.customer', verbose_name='Покупець')),
            ],
        ),
        migrations.AddField(
            model_name='cart',
            name='owner',
            field=models.ForeignKey(null=True, on_delete=django.db.models.deletion.CASCADE, to='products.customer', verbose_name='Власник'),
        ),
        migrations.AddField(
            model_name='cart',
            name='products',
            field=models.ManyToManyField(blank=True, related_name='related_cart', to='products.CartProduct'),
        ),
        migrations.CreateModel(
            name='Audio',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('model', models.CharField(max_length=250, verbose_name='Модель')),
                ('slug', models.SlugField(null=True, unique=True)),
                ('img', models.ImageField(upload_to='', verbose_name='Зображення')),
                ('description', models.TextField(blank=True, null=True, verbose_name='Опис')),
                ('price', models.DecimalField(decimal_places=2, max_digits=9, null=True, verbose_name='Ціна')),
                ('audio_type', models.CharField(choices=[('headset', 'Гарнітура'), ('headphone', 'Навушники')], max_length=25, verbose_name='Тип')),
                ('connect_type', models.CharField(choices=[('wired', 'Провідні'), ('Bluetooth', 'Bluetooth'), ('NFC', 'NFC'), ('NFC  Bluetooth', 'NFC+Bluetooth')], max_length=25, verbose_name='Тип підключення')),
                ('min_sound_freq', models.PositiveSmallIntegerField(verbose_name='Мінімальна частота навушника')),
                ('max_sound_freq', models.PositiveIntegerField(verbose_name='Максимальна частота навушника')),
                ('category', models.ForeignKey(null=True, on_delete=django.db.models.deletion.CASCADE, to='products.category', verbose_name='Категорія')),
                ('fk_brand', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='products.brand', verbose_name='Бренд')),
            ],
            options={
                'abstract': False,
            },
        ),
    ]
